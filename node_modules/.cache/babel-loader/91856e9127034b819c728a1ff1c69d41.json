{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!data.statusText === \"OK\") {\n        throw new Error('Something going wrong');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (error) {\n      const parsedError = JSON.parse(error.request.response);\n      setLoading(false);\n      setError(parsedError.message);\n      throw parsedError.message;\n    }\n  }, []);\n  const clearErrors = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearErrors\n  };\n};\n\n_s(useHttp, \"kOaVVMmkEtBpUCxwMTJFu0eLaVI=\");","map":{"version":3,"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","response","fetch","data","json","statusText","Error","parsedError","parse","message","clearErrors"],"sources":["/Users/anthonyfink/Work/mern-shorten/client/src/shared/hooks/http.hook.js"],"sourcesContent":["import {useState,useCallback} from \"react\";\n\nexport const useHttp = () => {\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst request = useCallback(async (url,method = 'GET', body = null,headers = {}) => {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tif(body){\n\t\t\t\tbody  = JSON.stringify(body);\n\t\t\t\theaders['Content-Type'] = 'application/json';\n\t\t\t}\n\t\t\tconst response = await fetch(url, {method,body,headers});\n\t\t\tconst data = await response.json();\n\t\t\tif(!data.statusText === \"OK\"){\n\t\t\t\tthrow new Error('Something going wrong');\n\t\t\t}\n\t\t\tsetLoading(false)\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tconst parsedError = JSON.parse(error.request.response);\n\t\t\tsetLoading(false);\n\t\t\tsetError(parsedError.message)\n\t\t\tthrow parsedError.message\n\t\t}\n\t},[])\n\n\tconst clearErrors = useCallback(() => setError(null),[]);\n\n\treturn {loading,request,error, clearErrors}\n}\n"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,WAAjB,QAAmC,OAAnC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMO,OAAO,GAAGN,WAAW,CAAC,gBAAOO,GAAP,EAAwD;IAAA,IAA7CC,MAA6C,uEAApC,KAAoC;IAAA,IAA7BC,IAA6B,uEAAtB,IAAsB;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACnFP,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACH,IAAGM,IAAH,EAAQ;QACPA,IAAI,GAAIE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAR;QACAC,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;MACA;;MACD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;QAACC,MAAD;QAAQC,IAAR;QAAaC;MAAb,CAAN,CAA5B;MACA,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;MACA,IAAG,CAACD,IAAI,CAACE,UAAN,KAAqB,IAAxB,EAA6B;QAC5B,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MACA;;MACDf,UAAU,CAAC,KAAD,CAAV;MACA,OAAOY,IAAP;IACA,CAZD,CAYE,OAAOX,KAAP,EAAc;MACf,MAAMe,WAAW,GAAGR,IAAI,CAACS,KAAL,CAAWhB,KAAK,CAACE,OAAN,CAAcO,QAAzB,CAApB;MACAV,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACc,WAAW,CAACE,OAAb,CAAR;MACA,MAAMF,WAAW,CAACE,OAAlB;IACA;EACD,CApB0B,EAoBzB,EApByB,CAA3B;EAsBA,MAAMC,WAAW,GAAGtB,WAAW,CAAC,MAAMK,QAAQ,CAAC,IAAD,CAAf,EAAsB,EAAtB,CAA/B;EAEA,OAAO;IAACH,OAAD;IAASI,OAAT;IAAiBF,KAAjB;IAAwBkB;EAAxB,CAAP;AACA,CA7BM;;GAAMrB,O"},"metadata":{},"sourceType":"module"}