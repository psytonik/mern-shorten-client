{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!data.statusText === \"OK\") {\n        throw new Error('Something going wrong');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (error) {\n      const parsedError = JSON.parse(error.request.response);\n      setLoading(false);\n      setError(parsedError.message);\n      throw parsedError.message;\n    }\n  }, []);\n  const clearErrors = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearErrors\n  };\n};\n\n_s(useHttp, \"kOaVVMmkEtBpUCxwMTJFu0eLaVI=\");","map":{"version":3,"sources":["/Users/anthonyfink/Work/mern-shorten/client/src/shared/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","response","fetch","data","json","statusText","Error","parsedError","parse","message","clearErrors"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,WAAjB,QAAmC,OAAnC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,OAAO,GAAGN,WAAW,CAAC,OAAOO,GAAP,EAAWC,MAAM,GAAG,KAApB,EAA2BC,IAAI,GAAG,IAAlC,EAAuCC,OAAO,GAAG,EAAjD,KAAwD;AACnFP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACH,UAAGM,IAAH,EAAQ;AACPA,QAAAA,IAAI,GAAIE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAR;AACAC,QAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACA;;AACD,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;AAACC,QAAAA,MAAD;AAAQC,QAAAA,IAAR;AAAaC,QAAAA;AAAb,OAAN,CAA5B;AACA,YAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAG,CAACD,IAAI,CAACE,UAAN,KAAqB,IAAxB,EAA6B;AAC5B,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACA;;AACDf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOY,IAAP;AACA,KAZD,CAYE,OAAOX,KAAP,EAAc;AACf,YAAMe,WAAW,GAAGR,IAAI,CAACS,KAAL,CAAWhB,KAAK,CAACE,OAAN,CAAcO,QAAzB,CAApB;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACc,WAAW,CAACE,OAAb,CAAR;AACA,YAAMF,WAAW,CAACE,OAAlB;AACA;AACD,GApB0B,EAoBzB,EApByB,CAA3B;AAsBA,QAAMC,WAAW,GAAGtB,WAAW,CAAC,MAAMK,QAAQ,CAAC,IAAD,CAAf,EAAsB,EAAtB,CAA/B;AAEA,SAAO;AAACH,IAAAA,OAAD;AAASI,IAAAA,OAAT;AAAiBF,IAAAA,KAAjB;AAAwBkB,IAAAA;AAAxB,GAAP;AACA,CA7BM;;GAAMrB,O","sourcesContent":["import {useState,useCallback} from \"react\";\n\nexport const useHttp = () => {\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst request = useCallback(async (url,method = 'GET', body = null,headers = {}) => {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tif(body){\n\t\t\t\tbody  = JSON.stringify(body);\n\t\t\t\theaders['Content-Type'] = 'application/json';\n\t\t\t}\n\t\t\tconst response = await fetch(url, {method,body,headers});\n\t\t\tconst data = await response.json();\n\t\t\tif(!data.statusText === \"OK\"){\n\t\t\t\tthrow new Error('Something going wrong');\n\t\t\t}\n\t\t\tsetLoading(false)\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tconst parsedError = JSON.parse(error.request.response);\n\t\t\tsetLoading(false);\n\t\t\tsetError(parsedError.message)\n\t\t\tthrow parsedError.message\n\t\t}\n\t},[])\n\n\tconst clearErrors = useCallback(() => setError(null),[]);\n\n\treturn {loading,request,error, clearErrors}\n}\n"]},"metadata":{},"sourceType":"module"}